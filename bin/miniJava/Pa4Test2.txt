/**************************************************************
 * miniJava PA4 feature test
 *
 *   use this to check contextual analysis and code
 *   generation for successively more adventurous
 *   miniJava constructs.
 *
 *   uncomment System.out.println(x) statements once
 *     you have sufficient functionality
 *   
 *   When interpreted using mJAM the compiled code 
 *   should print 1 ... 15 999
 *
 **************************************************************/




  class A{
 	int x;
 	int n;
 	A test;
 	
 	public void setN(int x){
 	}
 
 
 }
 
class PA4Test
{


	

    public static void main(String[] args)
    {        
    	System.out.println(1);
    	A a = new A();
    	System.out.println(2);
    	a.x = 4;
    	System.out.println(3);
    	a.test = new A();
    	//System.out.println(4);
    	System.out.println(0);
    	System.out.println(a.x);
    	
    	
    	
    	a.test.x = 15;
    	System.out.println(3);
    	System.out.println(3);
    	System.out.println(a.x);
    	a.x = 1050;
    	System.out.println(a.x);
    	
    	a.test.test = new A();
    	a.test.test.x = 150;
    	//System.out.println(a.test.x);
    	
    	
        

    }
    
    /*
    
    public static void countdown(int x){
    	if (x == -1){
    		return;
    	} else{
    		System.out.println(x);
    		countdown(x-1);	
    	}
    
    }
    
    public static int helper(int x, int y, int z){
    	return x + y + z;
    }
    
    public static boolean compareInts(int x, int y){
    	return x == y;
    }
    
    
    public static void printZero(){
    	int x = 0;
    	
    	while (x < 5){
    		System.out.println(0);
    		x = x + 1;
    	}
    }
    
    */
    
    
}




