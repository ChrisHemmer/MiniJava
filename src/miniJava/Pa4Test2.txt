/**************************************************************
 * miniJava PA4 feature test
 *
 *   use this to check contextual analysis and code
 *   generation for successively more adventurous
 *   miniJava constructs.
 *
 *   uncomment System.out.println(x) statements once
 *     you have sufficient functionality
 *   
 *   When interpreted using mJAM the compiled code 
 *   should print 1 ... 15 999
 *
 **************************************************************/


 
class PA4Test
{


	

    public static void main(String[] args)
    {        
    
        int x = 1;
        System.out.println(x);
        x = 2 * x + x - 1;
        System.out.println(x);
        System.out.println(3);
        if (x != -1)
        	System.out.println(4);
        else
            System.out.println(-1);
        int i = 0;
        while (i < 5) {
            i = i + 1;
            x = i;
        }
        System.out.println(x);
        
        A a = new A();
        if (a != null){
        	System.out.println(6);
        }
        System.out.println(0);
        System.out.println(0);
        System.out.println(0);
        System.out.println(7 + a.n);
        a.n = 8;
        System.out.println(a.n);
        

    }
    
    public static void countdown(int x){
    	if (x == -1){
    		return;
    	} else{
    		System.out.println(x);
    		countdown(x-1);	
    	}
    
    }
    
    public static int helper(int x, int y, int z){
    	return x + y + z;
    }
    
    public static boolean compareInts(int x, int y){
    	return x == y;
    }
    
    public static void printZero(){
    	int x = 0;
    	
    	while (x < 5){
    		System.out.println(0);
    		x = x + 1;
    	}
    }
    
    
}

/**********************************************************************
 *
 *  class A
 */
 
 class A{
 	int n;
 	public void start(){
 		n = 15;
 		System.out.println(n);
 	}
 	
 	public void setN(int x){
 		n = x;
 	}
 
 
 }


